
gpioDriver.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000006b4  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000774  0800077c  0001077c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000774  08000774  0001077c  2**0
                  CONTENTS
  4 .ARM          00000000  08000774  08000774  0001077c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000774  0800077c  0001077c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000774  08000774  00010774  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000778  08000778  00010778  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0001077c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000020  20000000  0800077c  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000020  0800077c  00020020  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  0001077c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000971  00000000  00000000  000107a4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000243  00000000  00000000  00011115  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000c0  00000000  00000000  00011358  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000098  00000000  00000000  00011418  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001c59  00000000  00000000  000114b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000e0d  00000000  00000000  00013109  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00007ea2  00000000  00000000  00013f16  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0001bdb8  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000208  00000000  00000000  0001be08  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000000 	.word	0x20000000
 80000e0:	00000000 	.word	0x00000000
 80000e4:	0800075c 	.word	0x0800075c

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000004 	.word	0x20000004
 8000104:	0800075c 	.word	0x0800075c

08000108 <GPIO_PeriClockControl>:
 *
 * 	@return
 * 	@Note
 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx,uint8_t EnorDi)
{
 8000108:	b580      	push	{r7, lr}
 800010a:	b082      	sub	sp, #8
 800010c:	af00      	add	r7, sp, #0
 800010e:	6078      	str	r0, [r7, #4]
 8000110:	000a      	movs	r2, r1
 8000112:	1cfb      	adds	r3, r7, #3
 8000114:	701a      	strb	r2, [r3, #0]
	if(EnorDi == ENABLE)
 8000116:	1cfb      	adds	r3, r7, #3
 8000118:	781b      	ldrb	r3, [r3, #0]
 800011a:	2b01      	cmp	r3, #1
 800011c:	d148      	bne.n	80001b0 <GPIO_PeriClockControl+0xa8>
	{
		if(pGPIOx == GPIOA)
 800011e:	687a      	ldr	r2, [r7, #4]
 8000120:	2390      	movs	r3, #144	; 0x90
 8000122:	05db      	lsls	r3, r3, #23
 8000124:	429a      	cmp	r2, r3
 8000126:	d107      	bne.n	8000138 <GPIO_PeriClockControl+0x30>
		{
			GPIOA_PCLK_EN;
 8000128:	4b44      	ldr	r3, [pc, #272]	; (800023c <GPIO_PeriClockControl+0x134>)
 800012a:	695a      	ldr	r2, [r3, #20]
 800012c:	4b43      	ldr	r3, [pc, #268]	; (800023c <GPIO_PeriClockControl+0x134>)
 800012e:	2180      	movs	r1, #128	; 0x80
 8000130:	0289      	lsls	r1, r1, #10
 8000132:	430a      	orrs	r2, r1
 8000134:	615a      	str	r2, [r3, #20]
		else if(pGPIOx == GPIOF)
		{
			GPIOF_PCLK_DI;
		}
	}
}
 8000136:	e07d      	b.n	8000234 <GPIO_PeriClockControl+0x12c>
		else if(pGPIOx == GPIOB)
 8000138:	687b      	ldr	r3, [r7, #4]
 800013a:	4a41      	ldr	r2, [pc, #260]	; (8000240 <GPIO_PeriClockControl+0x138>)
 800013c:	4293      	cmp	r3, r2
 800013e:	d107      	bne.n	8000150 <GPIO_PeriClockControl+0x48>
			GPIOB_PCLK_EN;
 8000140:	4b3e      	ldr	r3, [pc, #248]	; (800023c <GPIO_PeriClockControl+0x134>)
 8000142:	695a      	ldr	r2, [r3, #20]
 8000144:	4b3d      	ldr	r3, [pc, #244]	; (800023c <GPIO_PeriClockControl+0x134>)
 8000146:	2180      	movs	r1, #128	; 0x80
 8000148:	02c9      	lsls	r1, r1, #11
 800014a:	430a      	orrs	r2, r1
 800014c:	615a      	str	r2, [r3, #20]
}
 800014e:	e071      	b.n	8000234 <GPIO_PeriClockControl+0x12c>
		else if(pGPIOx == GPIOC)
 8000150:	687b      	ldr	r3, [r7, #4]
 8000152:	4a3c      	ldr	r2, [pc, #240]	; (8000244 <GPIO_PeriClockControl+0x13c>)
 8000154:	4293      	cmp	r3, r2
 8000156:	d107      	bne.n	8000168 <GPIO_PeriClockControl+0x60>
			GPIOC_PCLK_EN;
 8000158:	4b38      	ldr	r3, [pc, #224]	; (800023c <GPIO_PeriClockControl+0x134>)
 800015a:	695a      	ldr	r2, [r3, #20]
 800015c:	4b37      	ldr	r3, [pc, #220]	; (800023c <GPIO_PeriClockControl+0x134>)
 800015e:	2180      	movs	r1, #128	; 0x80
 8000160:	0309      	lsls	r1, r1, #12
 8000162:	430a      	orrs	r2, r1
 8000164:	615a      	str	r2, [r3, #20]
}
 8000166:	e065      	b.n	8000234 <GPIO_PeriClockControl+0x12c>
		else if(pGPIOx == GPIOD)
 8000168:	687b      	ldr	r3, [r7, #4]
 800016a:	4a37      	ldr	r2, [pc, #220]	; (8000248 <GPIO_PeriClockControl+0x140>)
 800016c:	4293      	cmp	r3, r2
 800016e:	d107      	bne.n	8000180 <GPIO_PeriClockControl+0x78>
			GPIOD_PCLK_EN;
 8000170:	4b32      	ldr	r3, [pc, #200]	; (800023c <GPIO_PeriClockControl+0x134>)
 8000172:	695a      	ldr	r2, [r3, #20]
 8000174:	4b31      	ldr	r3, [pc, #196]	; (800023c <GPIO_PeriClockControl+0x134>)
 8000176:	2180      	movs	r1, #128	; 0x80
 8000178:	0349      	lsls	r1, r1, #13
 800017a:	430a      	orrs	r2, r1
 800017c:	615a      	str	r2, [r3, #20]
}
 800017e:	e059      	b.n	8000234 <GPIO_PeriClockControl+0x12c>
		else if(pGPIOx == GPIOE)
 8000180:	687b      	ldr	r3, [r7, #4]
 8000182:	4a32      	ldr	r2, [pc, #200]	; (800024c <GPIO_PeriClockControl+0x144>)
 8000184:	4293      	cmp	r3, r2
 8000186:	d107      	bne.n	8000198 <GPIO_PeriClockControl+0x90>
			GPIOE_PCLK_EN;
 8000188:	4b2c      	ldr	r3, [pc, #176]	; (800023c <GPIO_PeriClockControl+0x134>)
 800018a:	695a      	ldr	r2, [r3, #20]
 800018c:	4b2b      	ldr	r3, [pc, #172]	; (800023c <GPIO_PeriClockControl+0x134>)
 800018e:	2180      	movs	r1, #128	; 0x80
 8000190:	0389      	lsls	r1, r1, #14
 8000192:	430a      	orrs	r2, r1
 8000194:	615a      	str	r2, [r3, #20]
}
 8000196:	e04d      	b.n	8000234 <GPIO_PeriClockControl+0x12c>
		else if(pGPIOx == GPIOF)
 8000198:	687b      	ldr	r3, [r7, #4]
 800019a:	4a2d      	ldr	r2, [pc, #180]	; (8000250 <GPIO_PeriClockControl+0x148>)
 800019c:	4293      	cmp	r3, r2
 800019e:	d149      	bne.n	8000234 <GPIO_PeriClockControl+0x12c>
			GPIOF_PCLK_EN;
 80001a0:	4b26      	ldr	r3, [pc, #152]	; (800023c <GPIO_PeriClockControl+0x134>)
 80001a2:	695a      	ldr	r2, [r3, #20]
 80001a4:	4b25      	ldr	r3, [pc, #148]	; (800023c <GPIO_PeriClockControl+0x134>)
 80001a6:	2180      	movs	r1, #128	; 0x80
 80001a8:	03c9      	lsls	r1, r1, #15
 80001aa:	430a      	orrs	r2, r1
 80001ac:	615a      	str	r2, [r3, #20]
}
 80001ae:	e041      	b.n	8000234 <GPIO_PeriClockControl+0x12c>
		if(pGPIOx == GPIOA)
 80001b0:	687a      	ldr	r2, [r7, #4]
 80001b2:	2390      	movs	r3, #144	; 0x90
 80001b4:	05db      	lsls	r3, r3, #23
 80001b6:	429a      	cmp	r2, r3
 80001b8:	d106      	bne.n	80001c8 <GPIO_PeriClockControl+0xc0>
			GPIOA_PCLK_DI;
 80001ba:	4b20      	ldr	r3, [pc, #128]	; (800023c <GPIO_PeriClockControl+0x134>)
 80001bc:	695a      	ldr	r2, [r3, #20]
 80001be:	4b1f      	ldr	r3, [pc, #124]	; (800023c <GPIO_PeriClockControl+0x134>)
 80001c0:	4924      	ldr	r1, [pc, #144]	; (8000254 <GPIO_PeriClockControl+0x14c>)
 80001c2:	400a      	ands	r2, r1
 80001c4:	615a      	str	r2, [r3, #20]
}
 80001c6:	e035      	b.n	8000234 <GPIO_PeriClockControl+0x12c>
		else if(pGPIOx == GPIOB)
 80001c8:	687b      	ldr	r3, [r7, #4]
 80001ca:	4a1d      	ldr	r2, [pc, #116]	; (8000240 <GPIO_PeriClockControl+0x138>)
 80001cc:	4293      	cmp	r3, r2
 80001ce:	d106      	bne.n	80001de <GPIO_PeriClockControl+0xd6>
			GPIOB_PCLK_DI;
 80001d0:	4b1a      	ldr	r3, [pc, #104]	; (800023c <GPIO_PeriClockControl+0x134>)
 80001d2:	695a      	ldr	r2, [r3, #20]
 80001d4:	4b19      	ldr	r3, [pc, #100]	; (800023c <GPIO_PeriClockControl+0x134>)
 80001d6:	4920      	ldr	r1, [pc, #128]	; (8000258 <GPIO_PeriClockControl+0x150>)
 80001d8:	400a      	ands	r2, r1
 80001da:	615a      	str	r2, [r3, #20]
}
 80001dc:	e02a      	b.n	8000234 <GPIO_PeriClockControl+0x12c>
		else if(pGPIOx == GPIOC)
 80001de:	687b      	ldr	r3, [r7, #4]
 80001e0:	4a18      	ldr	r2, [pc, #96]	; (8000244 <GPIO_PeriClockControl+0x13c>)
 80001e2:	4293      	cmp	r3, r2
 80001e4:	d106      	bne.n	80001f4 <GPIO_PeriClockControl+0xec>
			GPIOC_PCLK_DI;
 80001e6:	4b15      	ldr	r3, [pc, #84]	; (800023c <GPIO_PeriClockControl+0x134>)
 80001e8:	695a      	ldr	r2, [r3, #20]
 80001ea:	4b14      	ldr	r3, [pc, #80]	; (800023c <GPIO_PeriClockControl+0x134>)
 80001ec:	491b      	ldr	r1, [pc, #108]	; (800025c <GPIO_PeriClockControl+0x154>)
 80001ee:	400a      	ands	r2, r1
 80001f0:	615a      	str	r2, [r3, #20]
}
 80001f2:	e01f      	b.n	8000234 <GPIO_PeriClockControl+0x12c>
		else if(pGPIOx == GPIOD)
 80001f4:	687b      	ldr	r3, [r7, #4]
 80001f6:	4a14      	ldr	r2, [pc, #80]	; (8000248 <GPIO_PeriClockControl+0x140>)
 80001f8:	4293      	cmp	r3, r2
 80001fa:	d106      	bne.n	800020a <GPIO_PeriClockControl+0x102>
			GPIOD_PCLK_DI;
 80001fc:	4b0f      	ldr	r3, [pc, #60]	; (800023c <GPIO_PeriClockControl+0x134>)
 80001fe:	695a      	ldr	r2, [r3, #20]
 8000200:	4b0e      	ldr	r3, [pc, #56]	; (800023c <GPIO_PeriClockControl+0x134>)
 8000202:	4917      	ldr	r1, [pc, #92]	; (8000260 <GPIO_PeriClockControl+0x158>)
 8000204:	400a      	ands	r2, r1
 8000206:	615a      	str	r2, [r3, #20]
}
 8000208:	e014      	b.n	8000234 <GPIO_PeriClockControl+0x12c>
		else if(pGPIOx == GPIOE)
 800020a:	687b      	ldr	r3, [r7, #4]
 800020c:	4a0f      	ldr	r2, [pc, #60]	; (800024c <GPIO_PeriClockControl+0x144>)
 800020e:	4293      	cmp	r3, r2
 8000210:	d106      	bne.n	8000220 <GPIO_PeriClockControl+0x118>
			GPIOE_PCLK_DI;
 8000212:	4b0a      	ldr	r3, [pc, #40]	; (800023c <GPIO_PeriClockControl+0x134>)
 8000214:	695a      	ldr	r2, [r3, #20]
 8000216:	4b09      	ldr	r3, [pc, #36]	; (800023c <GPIO_PeriClockControl+0x134>)
 8000218:	4912      	ldr	r1, [pc, #72]	; (8000264 <GPIO_PeriClockControl+0x15c>)
 800021a:	400a      	ands	r2, r1
 800021c:	615a      	str	r2, [r3, #20]
}
 800021e:	e009      	b.n	8000234 <GPIO_PeriClockControl+0x12c>
		else if(pGPIOx == GPIOF)
 8000220:	687b      	ldr	r3, [r7, #4]
 8000222:	4a0b      	ldr	r2, [pc, #44]	; (8000250 <GPIO_PeriClockControl+0x148>)
 8000224:	4293      	cmp	r3, r2
 8000226:	d105      	bne.n	8000234 <GPIO_PeriClockControl+0x12c>
			GPIOF_PCLK_DI;
 8000228:	4b04      	ldr	r3, [pc, #16]	; (800023c <GPIO_PeriClockControl+0x134>)
 800022a:	695a      	ldr	r2, [r3, #20]
 800022c:	4b03      	ldr	r3, [pc, #12]	; (800023c <GPIO_PeriClockControl+0x134>)
 800022e:	490e      	ldr	r1, [pc, #56]	; (8000268 <GPIO_PeriClockControl+0x160>)
 8000230:	400a      	ands	r2, r1
 8000232:	615a      	str	r2, [r3, #20]
}
 8000234:	46c0      	nop			; (mov r8, r8)
 8000236:	46bd      	mov	sp, r7
 8000238:	b002      	add	sp, #8
 800023a:	bd80      	pop	{r7, pc}
 800023c:	40021000 	.word	0x40021000
 8000240:	48000400 	.word	0x48000400
 8000244:	48000800 	.word	0x48000800
 8000248:	48000c00 	.word	0x48000c00
 800024c:	48001000 	.word	0x48001000
 8000250:	48001400 	.word	0x48001400
 8000254:	fffdffff 	.word	0xfffdffff
 8000258:	fffbffff 	.word	0xfffbffff
 800025c:	fff7ffff 	.word	0xfff7ffff
 8000260:	ffefffff 	.word	0xffefffff
 8000264:	ffdfffff 	.word	0xffdfffff
 8000268:	ffbfffff 	.word	0xffbfffff

0800026c <GPIO_Init>:

/*
 * Init and DeInit
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 800026c:	b590      	push	{r4, r7, lr}
 800026e:	b087      	sub	sp, #28
 8000270:	af00      	add	r7, sp, #0
 8000272:	6078      	str	r0, [r7, #4]
	uint32_t temp=0;
 8000274:	2300      	movs	r3, #0
 8000276:	617b      	str	r3, [r7, #20]
	//mode
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 8000278:	687b      	ldr	r3, [r7, #4]
 800027a:	795b      	ldrb	r3, [r3, #5]
 800027c:	2b03      	cmp	r3, #3
 800027e:	d811      	bhi.n	80002a4 <GPIO_Init+0x38>
	{
		//non interrupt mode
		temp= (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000280:	687b      	ldr	r3, [r7, #4]
 8000282:	795b      	ldrb	r3, [r3, #5]
 8000284:	001a      	movs	r2, r3
 8000286:	687b      	ldr	r3, [r7, #4]
 8000288:	791b      	ldrb	r3, [r3, #4]
 800028a:	005b      	lsls	r3, r3, #1
 800028c:	409a      	lsls	r2, r3
 800028e:	0013      	movs	r3, r2
 8000290:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER|=temp;
 8000292:	687b      	ldr	r3, [r7, #4]
 8000294:	681b      	ldr	r3, [r3, #0]
 8000296:	6819      	ldr	r1, [r3, #0]
 8000298:	687b      	ldr	r3, [r7, #4]
 800029a:	681b      	ldr	r3, [r3, #0]
 800029c:	697a      	ldr	r2, [r7, #20]
 800029e:	430a      	orrs	r2, r1
 80002a0:	601a      	str	r2, [r3, #0]
 80002a2:	e0cb      	b.n	800043c <GPIO_Init+0x1d0>
	}
	else
	{
		//interrupt mode
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 80002a4:	687b      	ldr	r3, [r7, #4]
 80002a6:	795b      	ldrb	r3, [r3, #5]
 80002a8:	2b04      	cmp	r3, #4
 80002aa:	d117      	bne.n	80002dc <GPIO_Init+0x70>
		{
			//configure the FTSR
			EXTI->EXTI_FTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80002ac:	4b81      	ldr	r3, [pc, #516]	; (80004b4 <GPIO_Init+0x248>)
 80002ae:	68da      	ldr	r2, [r3, #12]
 80002b0:	687b      	ldr	r3, [r7, #4]
 80002b2:	791b      	ldrb	r3, [r3, #4]
 80002b4:	0019      	movs	r1, r3
 80002b6:	2301      	movs	r3, #1
 80002b8:	408b      	lsls	r3, r1
 80002ba:	0019      	movs	r1, r3
 80002bc:	4b7d      	ldr	r3, [pc, #500]	; (80004b4 <GPIO_Init+0x248>)
 80002be:	430a      	orrs	r2, r1
 80002c0:	60da      	str	r2, [r3, #12]
			//clear the RTSR Bit
			EXTI->EXTI_RTSR &= ~(1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80002c2:	4b7c      	ldr	r3, [pc, #496]	; (80004b4 <GPIO_Init+0x248>)
 80002c4:	689a      	ldr	r2, [r3, #8]
 80002c6:	687b      	ldr	r3, [r7, #4]
 80002c8:	791b      	ldrb	r3, [r3, #4]
 80002ca:	0019      	movs	r1, r3
 80002cc:	2301      	movs	r3, #1
 80002ce:	408b      	lsls	r3, r1
 80002d0:	43db      	mvns	r3, r3
 80002d2:	0019      	movs	r1, r3
 80002d4:	4b77      	ldr	r3, [pc, #476]	; (80004b4 <GPIO_Init+0x248>)
 80002d6:	400a      	ands	r2, r1
 80002d8:	609a      	str	r2, [r3, #8]
 80002da:	e035      	b.n	8000348 <GPIO_Init+0xdc>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 80002dc:	687b      	ldr	r3, [r7, #4]
 80002de:	795b      	ldrb	r3, [r3, #5]
 80002e0:	2b05      	cmp	r3, #5
 80002e2:	d117      	bne.n	8000314 <GPIO_Init+0xa8>
		{
			//configure the RTSR
			EXTI->EXTI_RTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80002e4:	4b73      	ldr	r3, [pc, #460]	; (80004b4 <GPIO_Init+0x248>)
 80002e6:	689a      	ldr	r2, [r3, #8]
 80002e8:	687b      	ldr	r3, [r7, #4]
 80002ea:	791b      	ldrb	r3, [r3, #4]
 80002ec:	0019      	movs	r1, r3
 80002ee:	2301      	movs	r3, #1
 80002f0:	408b      	lsls	r3, r1
 80002f2:	0019      	movs	r1, r3
 80002f4:	4b6f      	ldr	r3, [pc, #444]	; (80004b4 <GPIO_Init+0x248>)
 80002f6:	430a      	orrs	r2, r1
 80002f8:	609a      	str	r2, [r3, #8]
			//clear the EXTI_FTSR Bit
			EXTI->EXTI_FTSR &= ~(1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80002fa:	4b6e      	ldr	r3, [pc, #440]	; (80004b4 <GPIO_Init+0x248>)
 80002fc:	68da      	ldr	r2, [r3, #12]
 80002fe:	687b      	ldr	r3, [r7, #4]
 8000300:	791b      	ldrb	r3, [r3, #4]
 8000302:	0019      	movs	r1, r3
 8000304:	2301      	movs	r3, #1
 8000306:	408b      	lsls	r3, r1
 8000308:	43db      	mvns	r3, r3
 800030a:	0019      	movs	r1, r3
 800030c:	4b69      	ldr	r3, [pc, #420]	; (80004b4 <GPIO_Init+0x248>)
 800030e:	400a      	ands	r2, r1
 8000310:	60da      	str	r2, [r3, #12]
 8000312:	e019      	b.n	8000348 <GPIO_Init+0xdc>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 8000314:	687b      	ldr	r3, [r7, #4]
 8000316:	795b      	ldrb	r3, [r3, #5]
 8000318:	2b06      	cmp	r3, #6
 800031a:	d115      	bne.n	8000348 <GPIO_Init+0xdc>
		{
			//configure the FTSR and RTSR
			//configure the RTSR
			EXTI->EXTI_RTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800031c:	4b65      	ldr	r3, [pc, #404]	; (80004b4 <GPIO_Init+0x248>)
 800031e:	689a      	ldr	r2, [r3, #8]
 8000320:	687b      	ldr	r3, [r7, #4]
 8000322:	791b      	ldrb	r3, [r3, #4]
 8000324:	0019      	movs	r1, r3
 8000326:	2301      	movs	r3, #1
 8000328:	408b      	lsls	r3, r1
 800032a:	0019      	movs	r1, r3
 800032c:	4b61      	ldr	r3, [pc, #388]	; (80004b4 <GPIO_Init+0x248>)
 800032e:	430a      	orrs	r2, r1
 8000330:	609a      	str	r2, [r3, #8]
			//clear the EXTI_FTSR Bit
			EXTI->EXTI_FTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000332:	4b60      	ldr	r3, [pc, #384]	; (80004b4 <GPIO_Init+0x248>)
 8000334:	68da      	ldr	r2, [r3, #12]
 8000336:	687b      	ldr	r3, [r7, #4]
 8000338:	791b      	ldrb	r3, [r3, #4]
 800033a:	0019      	movs	r1, r3
 800033c:	2301      	movs	r3, #1
 800033e:	408b      	lsls	r3, r1
 8000340:	0019      	movs	r1, r3
 8000342:	4b5c      	ldr	r3, [pc, #368]	; (80004b4 <GPIO_Init+0x248>)
 8000344:	430a      	orrs	r2, r1
 8000346:	60da      	str	r2, [r3, #12]
		}
		//2. configure the GPIO Port  selection in SYSCFG_EXTICR
		uint8_t temp1 =	pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/4;  // 1
 8000348:	687b      	ldr	r3, [r7, #4]
 800034a:	791a      	ldrb	r2, [r3, #4]
 800034c:	2313      	movs	r3, #19
 800034e:	18fb      	adds	r3, r7, r3
 8000350:	0892      	lsrs	r2, r2, #2
 8000352:	701a      	strb	r2, [r3, #0]
		uint8_t temp2 =	pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber%4;	//1
 8000354:	687b      	ldr	r3, [r7, #4]
 8000356:	791a      	ldrb	r2, [r3, #4]
 8000358:	2312      	movs	r3, #18
 800035a:	18fb      	adds	r3, r7, r3
 800035c:	2103      	movs	r1, #3
 800035e:	400a      	ands	r2, r1
 8000360:	701a      	strb	r2, [r3, #0]
		uint32_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 8000362:	687b      	ldr	r3, [r7, #4]
 8000364:	681a      	ldr	r2, [r3, #0]
 8000366:	2390      	movs	r3, #144	; 0x90
 8000368:	05db      	lsls	r3, r3, #23
 800036a:	429a      	cmp	r2, r3
 800036c:	d024      	beq.n	80003b8 <GPIO_Init+0x14c>
 800036e:	687b      	ldr	r3, [r7, #4]
 8000370:	681b      	ldr	r3, [r3, #0]
 8000372:	4a51      	ldr	r2, [pc, #324]	; (80004b8 <GPIO_Init+0x24c>)
 8000374:	4293      	cmp	r3, r2
 8000376:	d01d      	beq.n	80003b4 <GPIO_Init+0x148>
 8000378:	687b      	ldr	r3, [r7, #4]
 800037a:	681b      	ldr	r3, [r3, #0]
 800037c:	4a4f      	ldr	r2, [pc, #316]	; (80004bc <GPIO_Init+0x250>)
 800037e:	4293      	cmp	r3, r2
 8000380:	d016      	beq.n	80003b0 <GPIO_Init+0x144>
 8000382:	687b      	ldr	r3, [r7, #4]
 8000384:	681b      	ldr	r3, [r3, #0]
 8000386:	4a4e      	ldr	r2, [pc, #312]	; (80004c0 <GPIO_Init+0x254>)
 8000388:	4293      	cmp	r3, r2
 800038a:	d00f      	beq.n	80003ac <GPIO_Init+0x140>
 800038c:	687b      	ldr	r3, [r7, #4]
 800038e:	681b      	ldr	r3, [r3, #0]
 8000390:	4a4c      	ldr	r2, [pc, #304]	; (80004c4 <GPIO_Init+0x258>)
 8000392:	4293      	cmp	r3, r2
 8000394:	d008      	beq.n	80003a8 <GPIO_Init+0x13c>
 8000396:	687b      	ldr	r3, [r7, #4]
 8000398:	681b      	ldr	r3, [r3, #0]
 800039a:	4a4b      	ldr	r2, [pc, #300]	; (80004c8 <GPIO_Init+0x25c>)
 800039c:	4293      	cmp	r3, r2
 800039e:	d101      	bne.n	80003a4 <GPIO_Init+0x138>
 80003a0:	2305      	movs	r3, #5
 80003a2:	e00a      	b.n	80003ba <GPIO_Init+0x14e>
 80003a4:	2300      	movs	r3, #0
 80003a6:	e008      	b.n	80003ba <GPIO_Init+0x14e>
 80003a8:	2304      	movs	r3, #4
 80003aa:	e006      	b.n	80003ba <GPIO_Init+0x14e>
 80003ac:	2303      	movs	r3, #3
 80003ae:	e004      	b.n	80003ba <GPIO_Init+0x14e>
 80003b0:	2302      	movs	r3, #2
 80003b2:	e002      	b.n	80003ba <GPIO_Init+0x14e>
 80003b4:	2301      	movs	r3, #1
 80003b6:	e000      	b.n	80003ba <GPIO_Init+0x14e>
 80003b8:	2300      	movs	r3, #0
 80003ba:	60fb      	str	r3, [r7, #12]
		if(portcode == 0)
 80003bc:	68fb      	ldr	r3, [r7, #12]
 80003be:	2b00      	cmp	r3, #0
 80003c0:	d117      	bne.n	80003f2 <GPIO_Init+0x186>
		{
			SYSCFG->SYSCFG_EXTICR[temp1] &= ~(0x0f<<(4*temp2));
 80003c2:	4a42      	ldr	r2, [pc, #264]	; (80004cc <GPIO_Init+0x260>)
 80003c4:	2413      	movs	r4, #19
 80003c6:	193b      	adds	r3, r7, r4
 80003c8:	781b      	ldrb	r3, [r3, #0]
 80003ca:	3302      	adds	r3, #2
 80003cc:	009b      	lsls	r3, r3, #2
 80003ce:	589a      	ldr	r2, [r3, r2]
 80003d0:	2312      	movs	r3, #18
 80003d2:	18fb      	adds	r3, r7, r3
 80003d4:	781b      	ldrb	r3, [r3, #0]
 80003d6:	009b      	lsls	r3, r3, #2
 80003d8:	210f      	movs	r1, #15
 80003da:	4099      	lsls	r1, r3
 80003dc:	000b      	movs	r3, r1
 80003de:	43db      	mvns	r3, r3
 80003e0:	0018      	movs	r0, r3
 80003e2:	493a      	ldr	r1, [pc, #232]	; (80004cc <GPIO_Init+0x260>)
 80003e4:	193b      	adds	r3, r7, r4
 80003e6:	781b      	ldrb	r3, [r3, #0]
 80003e8:	4002      	ands	r2, r0
 80003ea:	3302      	adds	r3, #2
 80003ec:	009b      	lsls	r3, r3, #2
 80003ee:	505a      	str	r2, [r3, r1]
 80003f0:	e013      	b.n	800041a <GPIO_Init+0x1ae>

		}
		else
		{
			SYSCFG->SYSCFG_EXTICR[temp1]|=portcode<<(4*temp2);
 80003f2:	4a36      	ldr	r2, [pc, #216]	; (80004cc <GPIO_Init+0x260>)
 80003f4:	2413      	movs	r4, #19
 80003f6:	193b      	adds	r3, r7, r4
 80003f8:	781b      	ldrb	r3, [r3, #0]
 80003fa:	3302      	adds	r3, #2
 80003fc:	009b      	lsls	r3, r3, #2
 80003fe:	5899      	ldr	r1, [r3, r2]
 8000400:	2312      	movs	r3, #18
 8000402:	18fb      	adds	r3, r7, r3
 8000404:	781b      	ldrb	r3, [r3, #0]
 8000406:	009b      	lsls	r3, r3, #2
 8000408:	68fa      	ldr	r2, [r7, #12]
 800040a:	409a      	lsls	r2, r3
 800040c:	482f      	ldr	r0, [pc, #188]	; (80004cc <GPIO_Init+0x260>)
 800040e:	193b      	adds	r3, r7, r4
 8000410:	781b      	ldrb	r3, [r3, #0]
 8000412:	430a      	orrs	r2, r1
 8000414:	3302      	adds	r3, #2
 8000416:	009b      	lsls	r3, r3, #2
 8000418:	501a      	str	r2, [r3, r0]

		}
		SYSCFG_PCLK_EN;
 800041a:	4b2d      	ldr	r3, [pc, #180]	; (80004d0 <GPIO_Init+0x264>)
 800041c:	699a      	ldr	r2, [r3, #24]
 800041e:	4b2c      	ldr	r3, [pc, #176]	; (80004d0 <GPIO_Init+0x264>)
 8000420:	2101      	movs	r1, #1
 8000422:	430a      	orrs	r2, r1
 8000424:	619a      	str	r2, [r3, #24]

		//3. enable the exti interuupt
		EXTI->EXTI_IMR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000426:	4b23      	ldr	r3, [pc, #140]	; (80004b4 <GPIO_Init+0x248>)
 8000428:	681a      	ldr	r2, [r3, #0]
 800042a:	687b      	ldr	r3, [r7, #4]
 800042c:	791b      	ldrb	r3, [r3, #4]
 800042e:	0019      	movs	r1, r3
 8000430:	2301      	movs	r3, #1
 8000432:	408b      	lsls	r3, r1
 8000434:	0019      	movs	r1, r3
 8000436:	4b1f      	ldr	r3, [pc, #124]	; (80004b4 <GPIO_Init+0x248>)
 8000438:	430a      	orrs	r2, r1
 800043a:	601a      	str	r2, [r3, #0]
	}
	temp=0;
 800043c:	2300      	movs	r3, #0
 800043e:	617b      	str	r3, [r7, #20]
	//speed
	temp=(pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 *pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000440:	687b      	ldr	r3, [r7, #4]
 8000442:	799b      	ldrb	r3, [r3, #6]
 8000444:	001a      	movs	r2, r3
 8000446:	687b      	ldr	r3, [r7, #4]
 8000448:	791b      	ldrb	r3, [r3, #4]
 800044a:	005b      	lsls	r3, r3, #1
 800044c:	409a      	lsls	r2, r3
 800044e:	0013      	movs	r3, r2
 8000450:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR|=temp;
 8000452:	687b      	ldr	r3, [r7, #4]
 8000454:	681b      	ldr	r3, [r3, #0]
 8000456:	6899      	ldr	r1, [r3, #8]
 8000458:	687b      	ldr	r3, [r7, #4]
 800045a:	681b      	ldr	r3, [r3, #0]
 800045c:	697a      	ldr	r2, [r7, #20]
 800045e:	430a      	orrs	r2, r1
 8000460:	609a      	str	r2, [r3, #8]
	temp=0;
 8000462:	2300      	movs	r3, #0
 8000464:	617b      	str	r3, [r7, #20]
	//output type
	temp=(pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000466:	687b      	ldr	r3, [r7, #4]
 8000468:	7a1b      	ldrb	r3, [r3, #8]
 800046a:	001a      	movs	r2, r3
 800046c:	687b      	ldr	r3, [r7, #4]
 800046e:	791b      	ldrb	r3, [r3, #4]
 8000470:	409a      	lsls	r2, r3
 8000472:	0013      	movs	r3, r2
 8000474:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER|=temp;
 8000476:	687b      	ldr	r3, [r7, #4]
 8000478:	681b      	ldr	r3, [r3, #0]
 800047a:	6859      	ldr	r1, [r3, #4]
 800047c:	687b      	ldr	r3, [r7, #4]
 800047e:	681b      	ldr	r3, [r3, #0]
 8000480:	697a      	ldr	r2, [r7, #20]
 8000482:	430a      	orrs	r2, r1
 8000484:	605a      	str	r2, [r3, #4]
	//pupd register
	temp=0;
 8000486:	2300      	movs	r3, #0
 8000488:	617b      	str	r3, [r7, #20]
	temp=(pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 *pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800048a:	687b      	ldr	r3, [r7, #4]
 800048c:	79db      	ldrb	r3, [r3, #7]
 800048e:	001a      	movs	r2, r3
 8000490:	687b      	ldr	r3, [r7, #4]
 8000492:	791b      	ldrb	r3, [r3, #4]
 8000494:	005b      	lsls	r3, r3, #1
 8000496:	409a      	lsls	r2, r3
 8000498:	0013      	movs	r3, r2
 800049a:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR|=temp;
 800049c:	687b      	ldr	r3, [r7, #4]
 800049e:	681b      	ldr	r3, [r3, #0]
 80004a0:	68d9      	ldr	r1, [r3, #12]
 80004a2:	687b      	ldr	r3, [r7, #4]
 80004a4:	681b      	ldr	r3, [r3, #0]
 80004a6:	697a      	ldr	r2, [r7, #20]
 80004a8:	430a      	orrs	r2, r1
 80004aa:	60da      	str	r2, [r3, #12]
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALT_FN)
	{
		//configure the alt function

	}
}
 80004ac:	46c0      	nop			; (mov r8, r8)
 80004ae:	46bd      	mov	sp, r7
 80004b0:	b007      	add	sp, #28
 80004b2:	bd90      	pop	{r4, r7, pc}
 80004b4:	40010400 	.word	0x40010400
 80004b8:	48000400 	.word	0x48000400
 80004bc:	48000800 	.word	0x48000800
 80004c0:	48000c00 	.word	0x48000c00
 80004c4:	48001000 	.word	0x48001000
 80004c8:	48001400 	.word	0x48001400
 80004cc:	40010000 	.word	0x40010000
 80004d0:	40021000 	.word	0x40021000

080004d4 <GPIO_ToggleOutputPin>:
{
	pGPIOx->ODR |= value;
}
//void GPIO_TogglePin(GPIO_RegDef_t *pGPIOx,uint8_t pinNumber);
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx,uint8_t pinNumber)
{
 80004d4:	b580      	push	{r7, lr}
 80004d6:	b082      	sub	sp, #8
 80004d8:	af00      	add	r7, sp, #0
 80004da:	6078      	str	r0, [r7, #4]
 80004dc:	000a      	movs	r2, r1
 80004de:	1cfb      	adds	r3, r7, #3
 80004e0:	701a      	strb	r2, [r3, #0]
	pGPIOx->ODR ^= (1 << pinNumber);
 80004e2:	687b      	ldr	r3, [r7, #4]
 80004e4:	695b      	ldr	r3, [r3, #20]
 80004e6:	1cfa      	adds	r2, r7, #3
 80004e8:	7812      	ldrb	r2, [r2, #0]
 80004ea:	2101      	movs	r1, #1
 80004ec:	4091      	lsls	r1, r2
 80004ee:	000a      	movs	r2, r1
 80004f0:	405a      	eors	r2, r3
 80004f2:	687b      	ldr	r3, [r7, #4]
 80004f4:	615a      	str	r2, [r3, #20]
}
 80004f6:	46c0      	nop			; (mov r8, r8)
 80004f8:	46bd      	mov	sp, r7
 80004fa:	b002      	add	sp, #8
 80004fc:	bd80      	pop	{r7, pc}
	...

08000500 <GPIO_IRQPriorityConfig>:
void GPIO_IRQPriorityConfig(uint8_t IRQNumber,uint32_t IRQPriority)
{
 8000500:	b580      	push	{r7, lr}
 8000502:	b086      	sub	sp, #24
 8000504:	af00      	add	r7, sp, #0
 8000506:	0002      	movs	r2, r0
 8000508:	6039      	str	r1, [r7, #0]
 800050a:	1dfb      	adds	r3, r7, #7
 800050c:	701a      	strb	r2, [r3, #0]
	uint32_t IPRx = (IRQNumber / 4);
 800050e:	1dfb      	adds	r3, r7, #7
 8000510:	781b      	ldrb	r3, [r3, #0]
 8000512:	089b      	lsrs	r3, r3, #2
 8000514:	b2db      	uxtb	r3, r3
 8000516:	617b      	str	r3, [r7, #20]
	uint32_t ipr_section = (IRQNumber % 4);
 8000518:	1dfb      	adds	r3, r7, #7
 800051a:	781b      	ldrb	r3, [r3, #0]
 800051c:	2203      	movs	r2, #3
 800051e:	4013      	ands	r3, r2
 8000520:	613b      	str	r3, [r7, #16]
	uint8_t shiftAmount= (8*ipr_section)+(8-NO_PR_BITS_IMPLEMENTED);
 8000522:	693b      	ldr	r3, [r7, #16]
 8000524:	b2db      	uxtb	r3, r3
 8000526:	00db      	lsls	r3, r3, #3
 8000528:	b2da      	uxtb	r2, r3
 800052a:	200f      	movs	r0, #15
 800052c:	183b      	adds	r3, r7, r0
 800052e:	3204      	adds	r2, #4
 8000530:	701a      	strb	r2, [r3, #0]
	//uint8_t shiftAmount= (8*ipr_section);
	*(NVIC_IPR + IPRx) |= (IRQPriority << (shiftAmount));
 8000532:	697b      	ldr	r3, [r7, #20]
 8000534:	009b      	lsls	r3, r3, #2
 8000536:	4a09      	ldr	r2, [pc, #36]	; (800055c <GPIO_IRQPriorityConfig+0x5c>)
 8000538:	4694      	mov	ip, r2
 800053a:	4463      	add	r3, ip
 800053c:	6819      	ldr	r1, [r3, #0]
 800053e:	183b      	adds	r3, r7, r0
 8000540:	781b      	ldrb	r3, [r3, #0]
 8000542:	683a      	ldr	r2, [r7, #0]
 8000544:	409a      	lsls	r2, r3
 8000546:	697b      	ldr	r3, [r7, #20]
 8000548:	009b      	lsls	r3, r3, #2
 800054a:	4804      	ldr	r0, [pc, #16]	; (800055c <GPIO_IRQPriorityConfig+0x5c>)
 800054c:	4684      	mov	ip, r0
 800054e:	4463      	add	r3, ip
 8000550:	430a      	orrs	r2, r1
 8000552:	601a      	str	r2, [r3, #0]
}
 8000554:	46c0      	nop			; (mov r8, r8)
 8000556:	46bd      	mov	sp, r7
 8000558:	b006      	add	sp, #24
 800055a:	bd80      	pop	{r7, pc}
 800055c:	e000e400 	.word	0xe000e400

08000560 <GPIO_IRQInterruptConfig>:
void GPIO_IRQInterruptConfig(uint8_t IRQNumber,uint8_t EnorDi)
{
 8000560:	b580      	push	{r7, lr}
 8000562:	b082      	sub	sp, #8
 8000564:	af00      	add	r7, sp, #0
 8000566:	0002      	movs	r2, r0
 8000568:	1dfb      	adds	r3, r7, #7
 800056a:	701a      	strb	r2, [r3, #0]
 800056c:	1dbb      	adds	r3, r7, #6
 800056e:	1c0a      	adds	r2, r1, #0
 8000570:	701a      	strb	r2, [r3, #0]
	if(EnorDi == ENABLE)
 8000572:	1dbb      	adds	r3, r7, #6
 8000574:	781b      	ldrb	r3, [r3, #0]
 8000576:	2b01      	cmp	r3, #1
 8000578:	d10a      	bne.n	8000590 <GPIO_IRQInterruptConfig+0x30>
	{
		//enable the interrupt for irq
		//configure	ISER register
		*NVIC_ISER |= (1<<IRQNumber); //Cortex-M0 Devices Generic User Guide
 800057a:	4b07      	ldr	r3, [pc, #28]	; (8000598 <GPIO_IRQInterruptConfig+0x38>)
 800057c:	681a      	ldr	r2, [r3, #0]
 800057e:	1dfb      	adds	r3, r7, #7
 8000580:	781b      	ldrb	r3, [r3, #0]
 8000582:	2101      	movs	r1, #1
 8000584:	4099      	lsls	r1, r3
 8000586:	000b      	movs	r3, r1
 8000588:	0019      	movs	r1, r3
 800058a:	4b03      	ldr	r3, [pc, #12]	; (8000598 <GPIO_IRQInterruptConfig+0x38>)
 800058c:	430a      	orrs	r2, r1
 800058e:	601a      	str	r2, [r3, #0]
	{
		//disable the interrupt for irq;
		//configure the ICER register

	}
}
 8000590:	46c0      	nop			; (mov r8, r8)
 8000592:	46bd      	mov	sp, r7
 8000594:	b002      	add	sp, #8
 8000596:	bd80      	pop	{r7, pc}
 8000598:	e000e100 	.word	0xe000e100

0800059c <GPIO_IRQHandling>:
void GPIO_IRQHandling(uint8_t pinNumber)
{
 800059c:	b580      	push	{r7, lr}
 800059e:	b082      	sub	sp, #8
 80005a0:	af00      	add	r7, sp, #0
 80005a2:	0002      	movs	r2, r0
 80005a4:	1dfb      	adds	r3, r7, #7
 80005a6:	701a      	strb	r2, [r3, #0]
	//clear the exti pr register corresponding to the pin number
	if(EXTI->EXTI_PR & (1<<pinNumber))
 80005a8:	4b0b      	ldr	r3, [pc, #44]	; (80005d8 <GPIO_IRQHandling+0x3c>)
 80005aa:	695b      	ldr	r3, [r3, #20]
 80005ac:	1dfa      	adds	r2, r7, #7
 80005ae:	7812      	ldrb	r2, [r2, #0]
 80005b0:	2101      	movs	r1, #1
 80005b2:	4091      	lsls	r1, r2
 80005b4:	000a      	movs	r2, r1
 80005b6:	4013      	ands	r3, r2
 80005b8:	d00a      	beq.n	80005d0 <GPIO_IRQHandling+0x34>
	{
		//clear
		EXTI->EXTI_PR |= (1<<pinNumber);
 80005ba:	4b07      	ldr	r3, [pc, #28]	; (80005d8 <GPIO_IRQHandling+0x3c>)
 80005bc:	695a      	ldr	r2, [r3, #20]
 80005be:	1dfb      	adds	r3, r7, #7
 80005c0:	781b      	ldrb	r3, [r3, #0]
 80005c2:	2101      	movs	r1, #1
 80005c4:	4099      	lsls	r1, r3
 80005c6:	000b      	movs	r3, r1
 80005c8:	0019      	movs	r1, r3
 80005ca:	4b03      	ldr	r3, [pc, #12]	; (80005d8 <GPIO_IRQHandling+0x3c>)
 80005cc:	430a      	orrs	r2, r1
 80005ce:	615a      	str	r2, [r3, #20]
	}
}
 80005d0:	46c0      	nop			; (mov r8, r8)
 80005d2:	46bd      	mov	sp, r7
 80005d4:	b002      	add	sp, #8
 80005d6:	bd80      	pop	{r7, pc}
 80005d8:	40010400 	.word	0x40010400

080005dc <main>:
#define HIGH 1
#define LOW 0
#define BTNPRESSED LOW
uint32_t moc_cut=0;
int main(void)
{
 80005dc:	b590      	push	{r4, r7, lr}
 80005de:	b087      	sub	sp, #28
 80005e0:	af00      	add	r7, sp, #0
	GPIO_Handle_t GpioLedPC0,GpioButtonPC5;
	memset(&GpioLedPC0,0,sizeof(GpioLedPC0));
 80005e2:	240c      	movs	r4, #12
 80005e4:	193b      	adds	r3, r7, r4
 80005e6:	220c      	movs	r2, #12
 80005e8:	2100      	movs	r1, #0
 80005ea:	0018      	movs	r0, r3
 80005ec:	f000 f8ae 	bl	800074c <memset>
		memset(&GpioButtonPC5,0,sizeof(GpioButtonPC5));
 80005f0:	003b      	movs	r3, r7
 80005f2:	220c      	movs	r2, #12
 80005f4:	2100      	movs	r1, #0
 80005f6:	0018      	movs	r0, r3
 80005f8:	f000 f8a8 	bl	800074c <memset>
	GpioLedPC0.pGPIOx=GPIOC;
 80005fc:	0021      	movs	r1, r4
 80005fe:	187b      	adds	r3, r7, r1
 8000600:	4a21      	ldr	r2, [pc, #132]	; (8000688 <main+0xac>)
 8000602:	601a      	str	r2, [r3, #0]
		GpioButtonPC5.pGPIOx=GPIOA;
 8000604:	003b      	movs	r3, r7
 8000606:	2290      	movs	r2, #144	; 0x90
 8000608:	05d2      	lsls	r2, r2, #23
 800060a:	601a      	str	r2, [r3, #0]


	GpioLedPC0.GPIO_PinConfig.GPIO_PinNumber=GPIO_PIN_NO_0;
 800060c:	000c      	movs	r4, r1
 800060e:	193b      	adds	r3, r7, r4
 8000610:	2200      	movs	r2, #0
 8000612:	711a      	strb	r2, [r3, #4]
	GpioLedPC0.GPIO_PinConfig.GPIO_PinMode=GPIO_MODE_OUTPUT;
 8000614:	193b      	adds	r3, r7, r4
 8000616:	2201      	movs	r2, #1
 8000618:	715a      	strb	r2, [r3, #5]
	GpioLedPC0.GPIO_PinConfig.GPIO_PinOPType=GPIO_OP_TYPE_PP;
 800061a:	193b      	adds	r3, r7, r4
 800061c:	2200      	movs	r2, #0
 800061e:	721a      	strb	r2, [r3, #8]
	GpioLedPC0.GPIO_PinConfig.GPIO_PinSpeed=GPIO_SPEED_FAST;
 8000620:	193b      	adds	r3, r7, r4
 8000622:	2202      	movs	r2, #2
 8000624:	719a      	strb	r2, [r3, #6]
	GpioLedPC0.GPIO_PinConfig.GPIO_PinPuPdControl=GPIO_NO_PU_PD;
 8000626:	193b      	adds	r3, r7, r4
 8000628:	2200      	movs	r2, #0
 800062a:	71da      	strb	r2, [r3, #7]
	GPIO_PeriClockControl(GPIOC, ENABLE);
 800062c:	4b16      	ldr	r3, [pc, #88]	; (8000688 <main+0xac>)
 800062e:	2101      	movs	r1, #1
 8000630:	0018      	movs	r0, r3
 8000632:	f7ff fd69 	bl	8000108 <GPIO_PeriClockControl>
	GPIO_Init(&GpioLedPC0);
 8000636:	193b      	adds	r3, r7, r4
 8000638:	0018      	movs	r0, r3
 800063a:	f7ff fe17 	bl	800026c <GPIO_Init>

	GpioButtonPC5.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_1;
 800063e:	003b      	movs	r3, r7
 8000640:	2201      	movs	r2, #1
 8000642:	711a      	strb	r2, [r3, #4]
	GpioButtonPC5.GPIO_PinConfig.GPIO_PinMode=	GPIO_MODE_IT_FT;
 8000644:	003b      	movs	r3, r7
 8000646:	2204      	movs	r2, #4
 8000648:	715a      	strb	r2, [r3, #5]
	GpioButtonPC5.GPIO_PinConfig.GPIO_PinSpeed=	GPIO_SPEED_FAST;
 800064a:	003b      	movs	r3, r7
 800064c:	2202      	movs	r2, #2
 800064e:	719a      	strb	r2, [r3, #6]
	GpioButtonPC5.GPIO_PinConfig.GPIO_PinPuPdControl=GPIO_PIN_PU;
 8000650:	003b      	movs	r3, r7
 8000652:	2201      	movs	r2, #1
 8000654:	71da      	strb	r2, [r3, #7]
	GPIO_Init(&GpioButtonPC5);
 8000656:	003b      	movs	r3, r7
 8000658:	0018      	movs	r0, r3
 800065a:	f7ff fe07 	bl	800026c <GPIO_Init>

	//IRQ configuration
	GPIO_IRQPriorityConfig(IRQ_NO_EXTI0_1, NVIC_IRQ_PRI_12);
 800065e:	210c      	movs	r1, #12
 8000660:	2005      	movs	r0, #5
 8000662:	f7ff ff4d 	bl	8000500 <GPIO_IRQPriorityConfig>
	GPIO_IRQInterruptConfig(IRQ_NO_EXTI0_1, ENABLE);
 8000666:	2101      	movs	r1, #1
 8000668:	2005      	movs	r0, #5
 800066a:	f7ff ff79 	bl	8000560 <GPIO_IRQInterruptConfig>
	while(1)
	{
		if(moc_cut == 1)
 800066e:	4b07      	ldr	r3, [pc, #28]	; (800068c <main+0xb0>)
 8000670:	681b      	ldr	r3, [r3, #0]
 8000672:	2b01      	cmp	r3, #1
 8000674:	d1fb      	bne.n	800066e <main+0x92>
		{
		GPIO_ToggleOutputPin(GPIOC, GPIO_PIN_NO_0);
 8000676:	4b04      	ldr	r3, [pc, #16]	; (8000688 <main+0xac>)
 8000678:	2100      	movs	r1, #0
 800067a:	0018      	movs	r0, r3
 800067c:	f7ff ff2a 	bl	80004d4 <GPIO_ToggleOutputPin>
		moc_cut=0;
 8000680:	4b02      	ldr	r3, [pc, #8]	; (800068c <main+0xb0>)
 8000682:	2200      	movs	r2, #0
 8000684:	601a      	str	r2, [r3, #0]
		if(moc_cut == 1)
 8000686:	e7f2      	b.n	800066e <main+0x92>
 8000688:	48000800 	.word	0x48000800
 800068c:	2000001c 	.word	0x2000001c

08000690 <EXTI0_1_IRQHandler>:


}//end of main

void EXTI0_1_IRQHandler(void)
{
 8000690:	b580      	push	{r7, lr}
 8000692:	af00      	add	r7, sp, #0
	GPIO_IRQHandling(GPIO_PIN_NO_1);//clear the pending event from exti line
 8000694:	2001      	movs	r0, #1
 8000696:	f7ff ff81 	bl	800059c <GPIO_IRQHandling>
	moc_cut++;
 800069a:	4b04      	ldr	r3, [pc, #16]	; (80006ac <EXTI0_1_IRQHandler+0x1c>)
 800069c:	681b      	ldr	r3, [r3, #0]
 800069e:	1c5a      	adds	r2, r3, #1
 80006a0:	4b02      	ldr	r3, [pc, #8]	; (80006ac <EXTI0_1_IRQHandler+0x1c>)
 80006a2:	601a      	str	r2, [r3, #0]
}
 80006a4:	46c0      	nop			; (mov r8, r8)
 80006a6:	46bd      	mov	sp, r7
 80006a8:	bd80      	pop	{r7, pc}
 80006aa:	46c0      	nop			; (mov r8, r8)
 80006ac:	2000001c 	.word	0x2000001c

080006b0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80006b0:	480d      	ldr	r0, [pc, #52]	; (80006e8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80006b2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80006b4:	e000      	b.n	80006b8 <Reset_Handler+0x8>
 80006b6:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80006b8:	480c      	ldr	r0, [pc, #48]	; (80006ec <LoopForever+0x6>)
  ldr r1, =_edata
 80006ba:	490d      	ldr	r1, [pc, #52]	; (80006f0 <LoopForever+0xa>)
  ldr r2, =_sidata
 80006bc:	4a0d      	ldr	r2, [pc, #52]	; (80006f4 <LoopForever+0xe>)
  movs r3, #0
 80006be:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80006c0:	e002      	b.n	80006c8 <LoopCopyDataInit>

080006c2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80006c2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80006c4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80006c6:	3304      	adds	r3, #4

080006c8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80006c8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80006ca:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80006cc:	d3f9      	bcc.n	80006c2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80006ce:	4a0a      	ldr	r2, [pc, #40]	; (80006f8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80006d0:	4c0a      	ldr	r4, [pc, #40]	; (80006fc <LoopForever+0x16>)
  movs r3, #0
 80006d2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80006d4:	e001      	b.n	80006da <LoopFillZerobss>

080006d6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80006d6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80006d8:	3204      	adds	r2, #4

080006da <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80006da:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80006dc:	d3fb      	bcc.n	80006d6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80006de:	f000 f811 	bl	8000704 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80006e2:	f7ff ff7b 	bl	80005dc <main>

080006e6 <LoopForever>:

LoopForever:
    b LoopForever
 80006e6:	e7fe      	b.n	80006e6 <LoopForever>
  ldr   r0, =_estack
 80006e8:	20004000 	.word	0x20004000
  ldr r0, =_sdata
 80006ec:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80006f0:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80006f4:	0800077c 	.word	0x0800077c
  ldr r2, =_sbss
 80006f8:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80006fc:	20000020 	.word	0x20000020

08000700 <ADC_COMP_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000700:	e7fe      	b.n	8000700 <ADC_COMP_IRQHandler>
	...

08000704 <__libc_init_array>:
 8000704:	b570      	push	{r4, r5, r6, lr}
 8000706:	2600      	movs	r6, #0
 8000708:	4d0c      	ldr	r5, [pc, #48]	; (800073c <__libc_init_array+0x38>)
 800070a:	4c0d      	ldr	r4, [pc, #52]	; (8000740 <__libc_init_array+0x3c>)
 800070c:	1b64      	subs	r4, r4, r5
 800070e:	10a4      	asrs	r4, r4, #2
 8000710:	42a6      	cmp	r6, r4
 8000712:	d109      	bne.n	8000728 <__libc_init_array+0x24>
 8000714:	2600      	movs	r6, #0
 8000716:	f000 f821 	bl	800075c <_init>
 800071a:	4d0a      	ldr	r5, [pc, #40]	; (8000744 <__libc_init_array+0x40>)
 800071c:	4c0a      	ldr	r4, [pc, #40]	; (8000748 <__libc_init_array+0x44>)
 800071e:	1b64      	subs	r4, r4, r5
 8000720:	10a4      	asrs	r4, r4, #2
 8000722:	42a6      	cmp	r6, r4
 8000724:	d105      	bne.n	8000732 <__libc_init_array+0x2e>
 8000726:	bd70      	pop	{r4, r5, r6, pc}
 8000728:	00b3      	lsls	r3, r6, #2
 800072a:	58eb      	ldr	r3, [r5, r3]
 800072c:	4798      	blx	r3
 800072e:	3601      	adds	r6, #1
 8000730:	e7ee      	b.n	8000710 <__libc_init_array+0xc>
 8000732:	00b3      	lsls	r3, r6, #2
 8000734:	58eb      	ldr	r3, [r5, r3]
 8000736:	4798      	blx	r3
 8000738:	3601      	adds	r6, #1
 800073a:	e7f2      	b.n	8000722 <__libc_init_array+0x1e>
 800073c:	08000774 	.word	0x08000774
 8000740:	08000774 	.word	0x08000774
 8000744:	08000774 	.word	0x08000774
 8000748:	08000778 	.word	0x08000778

0800074c <memset>:
 800074c:	0003      	movs	r3, r0
 800074e:	1882      	adds	r2, r0, r2
 8000750:	4293      	cmp	r3, r2
 8000752:	d100      	bne.n	8000756 <memset+0xa>
 8000754:	4770      	bx	lr
 8000756:	7019      	strb	r1, [r3, #0]
 8000758:	3301      	adds	r3, #1
 800075a:	e7f9      	b.n	8000750 <memset+0x4>

0800075c <_init>:
 800075c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800075e:	46c0      	nop			; (mov r8, r8)
 8000760:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000762:	bc08      	pop	{r3}
 8000764:	469e      	mov	lr, r3
 8000766:	4770      	bx	lr

08000768 <_fini>:
 8000768:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800076a:	46c0      	nop			; (mov r8, r8)
 800076c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800076e:	bc08      	pop	{r3}
 8000770:	469e      	mov	lr, r3
 8000772:	4770      	bx	lr
